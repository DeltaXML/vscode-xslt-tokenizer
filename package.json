{
	"name": "xslt-xpath",
	"displayName": "XSLT/XPath for Visual Studio Code",
	"description": "Comprehensive language support for XSLT 3.0 / XPath 3.1",
	"version": "0.1.1",
	"publisher": "deltaxml",
	"icon": "xslt-xpath.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/DeltaXML/vscode-xslt-tokenizer"
	},
	"keywords": [
		"xml",
		"xslt",
		"xsl",
		"xpath",
		"highlighter",
		"formatter"
	],
	"engines": {
		"vscode": "^1.44.0"
	},
	"categories": [
		"Programming Languages"
	],
	"activationEvents": [
		"onLanguage:xpath",
		"onLanguage:xslt",
		"onLanguage:xml",
		"onCommand:workbench.action.tasks.runTask"
	],
	"license": "MIT",
	"main": "./out/extension.js",
	"contributes": {
		"semanticTokenScopes": [
			{
				"scopes": {
					"xmlPunctuation": [
						"punctuation.definition.tag.xml"
					],
					"processingInstrName": [
						"storage.type"
					],
					"attributeNameTest": [
						"storage.type"
					],
					"xslElementName": [
						"storage.type"
					],
					"uriLiteral": [
						"storage.type"
					],
					"functionNameTest": [
						"variable.other.constant"
					],
					"anonymousFunction": [
						"variable.other.constant"
					]
				}
			}
		],
		"configuration": {
			"title": "XSLT/XPath",
			"properties": {
				"XSLT.tasks.saxonJar": {
					"type": "string",
					"description": "Path of the installed Saxon jar file"
				}
			}
		},
		"taskDefinitions": [
			{
				"type": "xslt",
				"required": [
					"label",
					"xsltFile",
					"xmlSource",
					"resultPath",
					"saxonJar"
				],
				"properties": {
					"label": {
						"type": "string",
						"description": "The user interface label. Change this to uniquely identify the task"
					},
					"saxonJar": {
						"type": "string",
						"description": "`Path of the installed Saxon jar file"
					},
					"xsltFile": {
						"type": "string",
						"description": "The path to the XSLT stylesheet"
					},
					"xmlSource": {
						"type": "string",
						"description": "The path to the XML source file"
					},
					"initialTemplate": {
						"type": "string",
						"description": "The named template to be executed. Namespaced templates can be written as {uri}localname. Default is xsl:initial-template"
					},
					"initialMode": {
						"type": "string",
						"description": "The initial mode for the transformation. Namespaced modes can be written as {uri}localname"
					},
					"resultPath": {
						"type": "string",
						"description": "The destination path for the XSLT result"
					},
					"parameters": {
						"description": "The xsl:param values for the XSLT",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The xsl:param name. Namespaced params can be written as {uri}localname"
								},
								"value": {
									"type": "string",
									"description": "The xsl:param value. Special leading characters are: '?' (XPath), '!' (xsl:output), '+' (filename): See: http://www.saxonica.com/documentation/index.html#!using-xsl/commandline"
								}
							},
							"required": [
								"name",
								"value"
							]
						},
						"minItems": 1
					},
					"classPathEntries": {
						"description": "Add Java extension libraries to the classpath",
						"type": "array",
						"items": {
							"type": "string"
						},
						"minItems": 1
					},
					"group": {
						"type": "object",
						"properties": {
							"kind": {
								"type": "string",
								"description": "The kind of task. E.g. 'build'"
							}
						}
					}
				}
			}
		],
		"problemMatchers": [
			{
				"name": "saxon-xslt",
				"owner": "xslt",
				"fileLocation": [
					"relative",
					"${file}/.."
				],
				"pattern": [
					{
						"regexp": "^(?:Syntax |Static |Dynamic |Type )?(error|Error|Warning|Info)\\s+(?:at.*in.*\\sin|in|on|at|near\\s+.*.*)(?:\\s+)?([^\\s]*)(?:\\s+on)?\\s+line\\s+(\\d+)\\s+column\\s+(\\d+)\\s+of\\s+([^:]*)",
						"line": 3,
						"column": 4,
						"severity": 1,
						"file": 5
					},
					{
						"regexp": "^\\s+(\\w{4}\\d{4})(?::)?\\s+(.*)",
						"code": 1,
						"message": 2
					}
				]
			},
			{
				"name": "saxon-xslt.workspace",
				"owner": "xslt",
				"fileLocation": [
					"relative",
					"${workspaceFolder}"
				],
				"pattern": [
					{
						"regexp": "^(?:Syntax |Static |Dynamic |Type )?(error|Error|Warning|Info)\\s+(?:at.*in.*\\sin|in|on|at|near\\s+.*.*)(?:\\s+)?([^\\s]*)(?:\\s+on)?\\s+line\\s+(\\d+)\\s+column\\s+(\\d+)\\s+of\\s+([^:]*)",
						"line": 3,
						"column": 4,
						"severity": 1,
						"file": 5
					},
					{
						"regexp": "^\\s+(\\w{4}\\d{4})(?::)?\\s+(.*)",
						"code": 1,
						"message": 2
					}
				]
			},
			{
				"name": "saxon-xslt.workspace.src",
				"owner": "xslt",
				"fileLocation": [
					"relative",
					"${workspaceFolder}/src"
				],
				"pattern": [
					{
						"regexp": "^(?:Syntax |Static |Dynamic |Type )?(error|Error|Warning|Info)\\s+(?:at.*in.*\\sin|in|on|at|near\\s+.*.*)(?:\\s+)?([^\\s]*)(?:\\s+on)?\\s+line\\s+(\\d+)\\s+column\\s+(\\d+)\\s+of\\s+([^:]*)",
						"line": 3,
						"column": 4,
						"severity": 1,
						"file": 5
					},
					{
						"regexp": "^\\s+(\\w{4}\\d{4})(?::)?\\s+(.*)",
						"code": 1,
						"message": 2
					}
				]
			},
			{
				"name": "saxon-xslt.workspace.src.xsl",
				"owner": "xslt",
				"fileLocation": [
					"relative",
					"${workspaceFolder}/src/xsl"
				],
				"pattern": [
					{
						"regexp": "^(?:Syntax |Static |Dynamic |Type )?(error|Error|Warning|Info)\\s+(?:at.*in.*\\sin|in|on|at|near\\s+.*.*)(?:\\s+)?([^\\s]*)(?:\\s+on)?\\s+line\\s+(\\d+)\\s+column\\s+(\\d+)\\s+of\\s+([^:]*)",
						"line": 3,
						"column": 4,
						"severity": 1,
						"file": 5
					},
					{
						"regexp": "^\\s+(\\w{4}\\d{4})(?::)?\\s+(.*)",
						"code": 1,
						"message": 2
					}
				]
			},
			{
				"name": "saxon-xslt.workspace.resources.xsl",
				"owner": "xslt",
				"fileLocation": [
					"relative",
					"${workspaceFolder}/resources/xsl"
				],
				"pattern": [
					{
						"regexp": "^(?:Syntax |Static |Dynamic |Type )?(error|Error|Warning|Info)\\s+(?:at.*in.*\\sin|in|on|at|near\\s+.*.*)(?:\\s+)?([^\\s]*)(?:\\s+on)?\\s+line\\s+(\\d+)\\s+column\\s+(\\d+)\\s+of\\s+([^:]*)",
						"line": 3,
						"column": 4,
						"severity": 1,
						"file": 5
					},
					{
						"regexp": "^\\s+(\\w{4}\\d{4})(?::)?\\s+(.*)",
						"code": 1,
						"message": 2
					}
				]
			}
		],
		"problemPatterns": [
			{
				"name": "error.line",
				"regexp": "^(?:Syntax |Static |Dynamic |Type )?(error|Error|Warning|Info)\\s+(?:at.*in.*\\sin|in|on|at|near\\s+.*.*)(?:\\s+)?([^\\s]*)(?:\\s+on)?\\s+line\\s+(\\d+)\\s+column\\s+(\\d+)\\s+of\\s+([^:]*)",
				"line": 3,
				"column": 4,
				"severity": 1,
				"file": 5
			},
			{
				"name": "message.line",
				"regexp": "^\\s+(\\w{4}\\d{4})(?::)?\\s+(.*)",
				"code": 1,
				"message": 2
			}
		],
		"semanticTokenTypes": [
			{
				"id": "attributeNameTest",
				"superType": "struct",
				"description": "An attribute node test in a step expression"
			},
			{
				"id": "nodeNameTest",
				"superType": "class",
				"description": "A node test in a step expression"
			},
			{
				"id": "uriLiteral",
				"superType": "struct",
				"description": "A URI literal of the form: Q{uri}"
			},
			{
				"id": "nodeType",
				"superType": "parameter",
				"description": "type of node, e.g. element()"
			},
			{
				"id": "simpleType",
				"superType": "parameter",
				"description": "type of value, e.g. xs:integer"
			},
			{
				"id": "axisName",
				"superType": "label",
				"description": "XPath axis, e.g. descendant::"
			},
			{
				"id": "complexExpression",
				"superType": "keyword",
				"description": "multi-part expression keyword, e.g. let,:=,return"
			},
			{
				"id": "attributeName",
				"superType": "variable",
				"description": "XML attribute name"
			},
			{
				"id": "xmlnsName",
				"superType": "number",
				"description": "First part of an XML Namespace Declaration"
			},
			{
				"id": "attributeValue",
				"superType": "string",
				"description": "XML attribute value"
			},
			{
				"id": "elementName",
				"superType": "class",
				"description": "XML element name"
			},
			{
				"id": "elementValue",
				"superType": "string",
				"description": "XML element text node"
			},
			{
				"id": "processingInstrName",
				"superType": "struct",
				"description": "Processing Instruction name"
			},
			{
				"id": "processingInstrValue",
				"superType": "event",
				"description": "Processing Instruction value"
			},
			{
				"id": "entityRef",
				"superType": "function",
				"description": "XML Entity Reference - e.g. '&lt;'"
			},
			{
				"id": "anonymousFunction",
				"superType": "struct",
				"description": "Declaration of anonymous XPath Function"
			},
			{
				"id": "functionNameTest",
				"superType": "struct",
				"description": "Reference to an XPath Function - e.g. my:test#1"
			},
			{
				"id": "xmlComment",
				"superType": "comment",
				"description": "XML Comment"
			},
			{
				"id": "xslElementName",
				"superType": "struct",
				"description": "Name of XSLT Element"
			},
			{
				"id": "xmlPunctuation",
				"superType": "struct",
				"description": "XML angle-brackets etc."
			},
			{
				"id": "xmlText",
				"superType": "number",
				"description": "XML Text Node"
			},
			{
				"id": "dtd",
				"superType": "class",
				"description": "XML DTD Declaration"
			},
			{
				"id": "dtdEnd",
				"superType": "class",
				"description": "End of XML DTD Declaration"
			},
			{
				"id": "attributeEquals",
				"superType": "macro",
				"description": "XML attribute value assignment"
			}
		],
		"languages": [
			{
				"id": "xpath",
				"aliases": [
					"XPath",
					"xpath"
				],
				"extensions": [
					".xpath"
				],
				"configuration": "./language-configuration.json"
			},
			{
				"id": "xslt",
				"aliases": [
					"XSLT",
					"xslt"
				],
				"extensions": [
					".xsl",
					".xslt"
				],
				"configuration": "./xsl-language-configuration.json"
			},
			{
				"id": "xml",
				"aliases": [
					"XML",
					"xml"
				],
				"extensions": [
					".xml",
					".xsd",
					".ascx",
					".atom",
					".axml",
					".bpmn",
					".cpt",
					".csl",
					".csproj",
					".csproj.user",
					".dita",
					".ditamap",
					".docbook",
					".dtml",
					".fsproj",
					".fxml",
					".iml",
					".isml",
					".jmx",
					".launch",
					".menu",
					".mxml",
					".nuspec",
					".opml",
					".owl",
					".proj",
					".props",
					".pt",
					".publishsettings",
					".pubxml",
					".pubxml.user",
					".rbxlx",
					".rbxmx",
					".rdf",
					".rng",
					".rss",
					".shproj",
					".storyboard",
					".svg",
					".targets",
					".tld",
					".tmx",
					".vbproj",
					".vbproj.user",
					".vcxproj",
					".vcxproj.filters",
					".wsdl",
					".wxi",
					".wxl",
					".wxs",
					".xaml",
					".xbrl",
					".xbl",
					".xib",
					".xlf",
					".xliff",
					".xpdl",
					".xul",
					".xoml"
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "tslint -p ./",
		"watch": "tsc -watch -p ./",
		"test": "jest"
	},
	"devDependencies": {
		"@types/jest": "^24.9.1",
		"@types/node": "^10.17.17",
		"@types/vscode": "^1.44.0",
		"jest": "^25.2.3",
		"ts-jest": "^24.3.0",
		"tslint": "^5.20.1",
		"typescript": "^3.8.3",
		"xslt3": "^2.0.2"
	}
}
