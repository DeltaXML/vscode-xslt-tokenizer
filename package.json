{
	"name": "xpath-embedded",
	"displayName": "XPath Embedded",
	"description": "Syntax Highlighter and tools for XSLT and other XPath-based languages",
	"version": "0.0.1",
	"publisher": "deltaxml",
	"icon": "xpath-embedded.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/DeltaXML/xpath-embedded"
	},
	"keywords": [
		"xml",
		"xslt",
		"xsl",
		"xpath",
		"highlighter",
		"formatter"
	],
	"engines": {
		"vscode": "^1.44.0"
	},
	"categories": [
		"Programming Languages"
	],
	"activationEvents": [
		"onLanguage:xpath",
		"onLanguage:xslt",
		"onCommand:workbench.action.tasks.runTask"
	],
	"license": "SEE LICENSE IN: LICENSE.txt",
	"main": "./out/extension.js",
	"contributes": {
		"taskDefinitions": [
			{
				"type": "xslt",
				"required": [
					"task"
				],
				"properties": {
					"task": {
						"type": "string",
						"description": "The task name"
					},
					"xsltFile": {
						"type": "string",
						"description": "The path to the XSLT stylesheet"
					},
					"xmlSource": {
						"type": "string",
						"description": "The path to the XML source file"
					},
					"resultPath": {
						"type": "string",
						"description": "The destination path for the XSLT result"
					}
				}
			}
		],
		"problemMatchers": [
			{
				"name": "saxon-xslt",
				"owner": "xslt",
				"fileLocation": ["relative", "${file}/.."],
				"pattern": [
				  {
					"regexp": "^(Error|Warning|Info)\\s+(?:on|at|near\\s+.*.*)(?:\\s+)?([^\\s]*)(?:\\s+on)?\\s+line\\s+(\\d+)\\s+column\\s+(\\d+)\\s+of\\s+([^:]*)",
					"line": 3,
					"column": 4,
					"severity": 1,
					"file": 5
				  },
				  {
					  "regexp": "^\\s+(\\w{4}\\d{4})\\s+(.*)",
					  "code": 1,
					  "message": 2
				  }
				]
			}
		],
		"semanticTokenTypes": [
			{
				"id": "attributeNameTest",
				"superType": "struct",
				"description": "An attribute node test in a step expression"
			},
			{
				"id": "nodeNameTest",
				"superType": "class",
				"description": "A node test in a step expression"
			},
			{
				"id": "uriLiteral",
				"superType": "struct",
				"description": "A URI literal of the form: Q{uri}"
			},
			{
				"id": "nodeType",
				"superType": "parameter",
				"description": "type of node, e.g. element()"
			},
			{
				"id": "simpleType",
				"superType": "parameter",
				"description": "type of value, e.g. xs:integer"
			},
			{
				"id": "axisName",
				"superType": "label",
				"description": "XPath axis, e.g. descendant::"
			},
			{
				"id": "complexExpression",
				"superType": "keyword",
				"description": "multi-part expression keyword, e.g. let,:=,return"
			},
			{
				"id": "attributeName",
				"superType": "variable",
				"description": "XML attribute name"
			},
			{
				"id": "attributeValue",
				"superType": "string",
				"description": "XML attribute value"
			},
			{
				"id": "elementName",
				"superType": "class",
				"description": "XML element name"
			},
			{
				"id": "elementValue",
				"superType": "string",
				"description": "XML element text node"
			},
			{
				"id": "processingInstrName",
				"superType": "struct",
				"description": "Processing Instruction name"
			},
			{
				"id": "processingInstrValue",
				"superType": "event",
				"description": "Processing Instruction value"
			},
			{
				"id": "entityRef",
				"superType": "function",
				"description": "XML Entity Reference - e.g. '&lt;'"
			},
			{
				"id": "xmlComment",
				"superType": "comment",
				"description": "XML Comment"
			},
			{
				"id": "xslElementName",
				"superType": "struct",
				"description": "Name of XSLT Element"
			},
			{
				"id": "xmlPunctuation",
				"superType": "struct",
				"description": "XML angle-brackets etc."
			},
			{
				"id": "xmlText",
				"superType": "number",
				"description": "XML Text Node"
			},
			{
				"id": "attributeEquals",
				"superType": "macro",
				"description": "XML attribute value assignment"
			}
		],		
		"languages": [
			{
				"id": "xpath",
				"aliases": [
					"XPath",
					"xpath"
				],
				"extensions": [
					".xpath"
				],
				"configuration": "./language-configuration.json"
			},
			{
				"id": "xslt",
				"aliases": [
					"XSLT",
					"xslt"
				],
				"extensions": [
					".xsl",
					".xslt"
				],
				"configuration": "./xsl-language-configuration.json"
			}
		]
	},
	"semanticTokenScopes": [
		{
			"language": "xslt",
			"scopes": {
				"xmlPunctuation": ["punctuation.definition.tag", "meta.tag.xml", "text.xml"]
			}
		}
	],
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"compile": "tsc -p ./",
		"lint": "tslint -p ./",
		"watch": "tsc -watch -p ./",
		"test": "jest"
	},
	"devDependencies": {
		"@types/jest": "^24.9.1",
		"@types/node": "^10.17.17",
		"jest": "^25.2.3",
		"ts-jest": "^24.3.0",
		"tslint": "^5.20.1",
		"typescript": "^3.8.3"
	}
}
